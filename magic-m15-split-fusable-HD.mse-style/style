mse version: 2.0.0
game: magic
short name: 连体牌HD模板
full name: 融咒，连体牌HD模板
icon: card-sample.png
installer group: magic/m15 style/split cards/fuse
position hint: 002

version: 2018-06-01
depends on:
	package: magic.mse-game
	version: 2014-06-25
depends on:
	package: magic-default-image.mse-include
	version: 2007-09-23
depends on:
	package: magic-watermarks.mse-include
	version: 2007-09-23
depends on:
	package: magic-identity-new.mse-include
	version: 2012-01-22
depends on:
	package: magic-mana-large.mse-symbol-font
	version: 2007-09-23
depends on:
	package: magic-mana-small.mse-symbol-font
	version: 2007-09-23
depends on:
	package: magic-mainframe-extras.mse-include
	version: 2018-01-01
depends on: 
	package: magic-rarity.mse-include
	version: 2013-08-21
depends on: 
	package: magic-all-style.mse-include
	version: 2024-06-30

card width: 1050
card height: 750
card dpi: 600
############################################################## Extra scripts
init script:
	# Load scripts for image box
	include file: /magic-default-image.mse-include/scripts
	include file: /magic-all-style.mse-include/script
	
	# Should hybrids have a grey name?
	mask_hybrid_with_land := { styling.grey_hybrid_name }
	
	#Should multicolor lands with basic land types have a colored name?
	mask_multi_land_with_color := { styling.colored_multicolor_land_name }
	
	template_prefix := [
		card: "split/" fusecardtop: "fuse/" fusecardbot: "fuse/" stamp: "stamp/" identity: "/magic-identity-new.mse-include/"
		]
	template_suffix := [
		card: "card.png" fusecardtop: "card2.png" fusecardbot: "card.png", stamp: "stamp.png" identity: "identity.png"
		]
	template      := { template_prefix[type] + input + template_suffix[type] }
	land_template := { template_prefix[type] + input + template_suffix[type] }
	# land_template := { template_prefix[type] + (if input == "a" then "c" else input) + "l" + template_suffix[type] }
	# Use land templates for previews because they show more contrast
	hybrid_previews := "land,hybrid"
	
	# Use the normal tap symbol
	mana_t := {
		if      styling.tap_symbol == "old"        then "old"
		else if styling.tap_symbol == "diagonal T" then "older"
		else                                            "new"
	}
	
	fusecardtop_background := { color_background(type:"fusecardtop", base_hybrid:card_hybrid) }
	fusecardbot_background := { color_background(type:"fusecardbot", base_hybrid:card_hybrid) }

	# Use guild mana symbols?
	guild_mana := { styling.use_guild_mana_symbols }
	
	# Is the card a promo card?
	
	card_shape := { "fuse split" }

	use_fuse := { card.rule_text_3 != "" }

	has_identity := { styling.color_indicator_dot }
	has_identity2 := { styling.color_indicator_dot_2 }
	is_unsorted := {styling.remove_from_autocount}

	use_main_rarity := { contains(set.mainframe_rarity_name, match: ".png")}
	un_png := replace@(match:".png", replace: "")
	ancestral_mana := { contains(styling.other_options, match:"ancestral generic")}


	left_font_size := {to_number(pull_comma_array(styling.font_cap, end:false, cell:0, default:27))}
	right_font_size := {to_number(pull_comma_array(styling.font_cap, end:false, cell:1, default:left_font_size()))}

	bridge_colored := {
		
		# Card 1
		# What type of 'hybrid'?
		land     := chosen(choice:"land", card.card_color)
		multi    := chosen(choice:"multicolor", card.card_color)
		hybrid   := chosen(choice:"hybrid", card.card_color)
		artifact := chosen(choice:"artifact", card.card_color)
		if land and colored_lands then template := land_template # use land template instead?
		
		# The selected colors
		colors := sort_text( order: "(wubrg)"
						   , (if chosen(choice:"white", card.card_color) then "w")
						   + (if chosen(choice:"blue", card.card_color)  then "u")
						   + (if chosen(choice:"black", card.card_color) then "b")
						   + (if chosen(choice:"red", card.card_color)   then "r")
						   + (if chosen(choice:"green", card.card_color) then "g"))
		
		
		if multi and (hybrid or colors == "") then (
			colors := colors + "m"
			multi := false
		)
		if artifact and (hybrid or colors == "") then (
			colors := colors + "a"
			artifact := false
		)
		if chosen(choice:"reversed") then colors := reverse(colors)
		color_count := number_of_items(in: colors)
		if colors == "" then color1 := "c"
		
		if color_count > 0 then color1 := colors[color_count - 1]
		image1 := mask_bridge(color: color1)
		
		# Card 2
		# What type of 'hybrid'?
		land     := chosen(choice:"land", card.card_color_2)
		multi    := chosen(choice:"multicolor", card.card_color_2)
		hybrid   := chosen(choice:"hybrid", card.card_color_2)
		artifact := chosen(choice:"artifact", card.card_color_2)
		if land and colored_lands then template := land_template # use land template instead?
		
		# The selected colors
		colors := sort_text( order: "(wubrg)"
						   , (if chosen(choice:"white", card.card_color_2) then "w")
						   + (if chosen(choice:"blue", card.card_color_2)  then "u")
						   + (if chosen(choice:"black", card.card_color_2) then "b")
						   + (if chosen(choice:"red", card.card_color_2)   then "r")
						   + (if chosen(choice:"green", card.card_color_2) then "g"))
		
		
		if multi and (hybrid or colors == "") then (
			colors := colors + "m"
			multi := false
		)
		if artifact and (hybrid or colors == "") then (
			colors := colors + "a"
			artifact := false
		)
		if chosen(choice:"reversed") then colors := reverse(colors)
		color_count := number_of_items(in: colors)
		if colors == "" then color2 := "c"
		
		if color_count > 0 then (
			if chosen(choice:"vertical", card.card_color_2) then
				color2 := colors[color_count - 1]
			else 
				color2 := colors[0]
		)
		image2 := mask_bridge(color: color2)
		
		linear_blend(x1:0, y1:0, x2:1, y2:0)
	}

	mask_bridge := {
		base := color + "bridge.png"
		
		if land then
			"cbridge.png"
		else if multi then 
			masked_blend(
				mask:  "bridgemask.png",
				dark:  "mbridge.png",
				light: base,
			)
		else if artifact and color_count > 1 and mask_hybrid_with_land() then 
			masked_blend(
				mask:  "bridgemask.png",
				dark:  "cbridge.png",
				light: base
			)
		else if artifact then 
			base
		else if color_count > 1 and mask_hybrid_with_land() then
			masked_blend(
				mask:  "bridgemask.png",
				dark:  "cbridge.png",
				light: base,
			)
		else base
	}

	use_phyrexian_font := { chosen(styling.other_options, choice:"use phyrexian font") }
############################################################## Set info fields
set info style:
	symbol:
		variation:
			name: invertedcommon
			border radius: 0.10
			fill type: solid
			fill color:   rgb(255,255,255)
			border color: rgb(0,0,0)
############################################################## Extra style options
### 通用1 ###
include file: /magic-all-style.mse-include/style1

styling field:
	type: multiple choice
	name: other options
	choice: ancestral generic mana
	choice: prerelease stamp
	choice: use phyrexian font

### 通用2 ###
include file: /magic-all-style.mse-include/style2

styling field:
	type: boolean
	name: color indicator dot 2
	description: Use the color indicator dot
	initial: no
styling field:
	type: choice
	name: center text 2
	description: When to center text on the second card (short text only means only on one-line cards with no flavor text)
	choice: always
	choice: short text only
	choice: never
	initial: never
styling field:
	type: boolean
	name: is foil
	description: 是否为闪卡？
	initial: no

styling field:
	type: boolean
	name: inverted common symbol
	description: Should the common rarity symbol be inverted, like in Coldsnap?
	initial: no
styling field:
	type: package choice
	name: overlay
	description: Should there be an overlay applied, such as foil?
	match: magic-overlay-*.mse-include
	required: false
styling style:
	use guild mana symbols:
		choice images:
			yes: /magic-mana-small.mse-symbol-font/mana_guild_rg.png
			no:  /magic-mana-small.mse-symbol-font/mana_rg.png
	tap symbol:
		render style: both
		choice images:
			modern:     /magic-mana-large.mse-symbol-font/mana_t.png
			old:        /magic-mana-large.mse-symbol-font/mana_t_old.png
			diagonal T: /magic-mana-large.mse-symbol-font/mana_t_older.png
	center text:
		render style: both
		choice images:
			always:          /magic.mse-game/icons/center-all-text.png
			short text only: /magic.mse-game/icons/center-short-text.png
			never:           /magic.mse-game/icons/center-no-text.png
	center text 2:
		render style: both
		choice images:
			always:          /magic.mse-game/icons/center-all-text.png
			short text only: /magic.mse-game/icons/center-short-text.png
			never:           /magic.mse-game/icons/center-no-text.png
	inverted common symbol:
		choice images:
			no:  { symbol_variation(symbol: set.symbol, variation: "common") }
			yes: { symbol_variation(symbol: set.symbol, variation: "invertedcommon") }
	other options:
		render style: checklist
		direction: vertical

############################################################## Card fields
card style:
	############################# Background stuff
	# 左半部分（下半部分）
	card color:
		left:	70.5
		top:	19.5
		width:	479.5
		height:	711
		z index: 0
		render style: image
		popup style: in place
		image: { if use_fuse() then fusecardbot_background() else card_background() }
		mask: { "frame_mask.png" }
	# 右半部分（上半部分）
	card color 2:
		left:	550
		top:	19.5
		width:	479.5
		height:	711
		z index: 0
		render style: image
		popup style: in place
		image: { if use_fuse() then fusecardtop_background() else card_background() }
		mask: { "frame_mask.png" }
	############################# Name line
	name:
		left: 110
		top: {62 + (if use_phyrexian_font() then shrink_name()/4 else 0)}
		right:  { 503 - max(30, card_style.casting_cost.content_width) }
		height: {40 - 0.5*shrink_name()}
		alignment: { if use_phyrexian_font() then "top shrink-overflow" else "bottom shrink-overflow"}
		padding bottom: 0
		z index: 5
		font:
			name: { if use_phyrexian_font() then "Phi_horizontal_gbrsh_3.0" else if set.card_language != "简体中文" then "Beleren Bold" else "华康魏碑 Std W7" }
			size: { if set.card_language != "简体中文" then 32- shrink_name() else 34- shrink_name() }
			color: black

	name 2:
		left: 589.5
		top: {62 + (if use_phyrexian_font() then shrink_name()/4 else 0)}
		right:  { 984.5 - max(30, card_style.casting_cost_2.content_width) }
		height: {40 - 0.5*shrink_name()}
		alignment:{ if use_phyrexian_font() then "top shrink-overflow" else "bottom shrink-overflow"}
		padding bottom: 0
		z index: 5
		font:
			name: { if use_phyrexian_font() then "Phi_horizontal_gbrsh_3.0" else if set.card_language != "简体中文" then "Beleren Bold" else "华康魏碑 Std W7" }
			size: { if set.card_language != "简体中文" then 32- shrink_name() else 34- shrink_name() }
			color: black
	
	casting cost:
		right: 514
		top: 61
		width: { max(60, card_style.casting_cost.content_width) + 10 }
		height: 40
		alignment: middle right
		font:
			name: MPlantin
			size: 30
		symbol font:
			name: magic-mana-large
			size: 30
			alignment: middle right
		always symbol: true
		z index: 2
		padding top: 0
	
	casting cost 2:
		right: 993.5
		top: 61
		width: { max(60, card_style.casting_cost_2.content_width) + 10 }
		height: 40
		alignment: middle right
		font:
			name: MPlantin
			size: 30
		symbol font:
			name: magic-mana-large
			size: 30
			alignment: middle right
		always symbol: true
		z index: 2
		padding top: 0

	############################# Image
	image:
		left: 107
		top: 119
		width: 407.5
		height:	279
		z index: -1
		default: {default_image(card.card_color)}
	image 2:
		left: 586.5
		top: 119
		width: 407.5
		height:	279
		z index: -1
		default: {default_image(card.card_color_2)}

	############################# Card type
	indicator:
		left: 108
		top: 415
		width: 24
		height: 24
		z index: 2
		render style: image
		visible: { has_identity() }
		image: { card_identity() }
	indicator 2:
		left: 587.5
		top: 415
		width: 24
		height: 24
		z index: 2
		render style: image
		visible: { has_identity2() }
		image: { card_identity() }

	type:
		left: { if has_identity() then "134" else "110" }
		top: {shrink_type()/2 + 409.5 }
		width: { (if has_identity() then "376" else "400") - max(32,card_style.rarity.content_width) }
		height: 30
		alignment: top shrink-overflow
		z index: 2
		padding top: 2
		font:
			name: { if use_phyrexian_font() then "Phi_horizontal_gbrsh_3.0" else if set.card_language != "简体中文" then "Beleren Bold" else "华康魏碑 Std W7" }
			size: { if set.card_language != "简体中文" then 20 - shrink_type() else 22 - shrink_type() }
			color: black
			separator color: red
	type 2:
		left: { if has_identity2() then "613.5" else "589.5" }
		top: {shrink_type()/2 + 409.5 }
		width: { (if has_identity() then "376" else "400") - max(32,card_style.rarity.content_width) }
		height: 30
		alignment: top shrink-overflow
		z index: 2
		padding top: 2
		font:
			name: { if use_phyrexian_font() then "Phi_horizontal_gbrsh_3.0" else if set.card_language != "简体中文" then "Beleren Bold" else "华康魏碑 Std W7" }
			size: { if set.card_language != "简体中文" then 20 - shrink_type() else 22 - shrink_type() }
			color: black
			separator color: red
	
	rarity:
		right: {514 + rarity_shift()}
		top: 412
		width: 62
		height: 28
		z index: 2
		render style: image
		alignment: middle right
		include file: /magic-rarity.mse-include/rarity
		choice images:
			# Images based on the set symbol
			basic land:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "c.png"
					else if styling.inverted_common_symbol then symbol_variation(symbol: set.symbol, variation: "invertedcommon")
					else symbol_variation(symbol: set.symbol, variation: "common")
			common:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "c.png"
					else if styling.inverted_common_symbol then symbol_variation(symbol: set.symbol, variation: "invertedcommon")
					else symbol_variation(symbol: set.symbol, variation: "common")
			uncommon:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "u.png"
					else symbol_variation(symbol: set.symbol, variation: "uncommon")
			rare:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "r.png"
					else symbol_variation(symbol: set.symbol, variation: "rare")
			mythic rare:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "m.png"
					else symbol_variation(symbol: set.symbol, variation: "mythic rare")
			special:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "s.png"
					else symbol_variation(symbol: set.symbol, variation: "special")
			masterpiece:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "mp.png"
					else symbol_variation(symbol: set.masterpiece_symbol, variation: "mythic rare")
	rarity 2:
		right: {993.5 + rarity_shift()}
		top: 412
		width: 62
		height: 28
		z index: 2
		render style: image
		alignment: middle right
		include file: /magic-rarity.mse-include/rarity
		choice images:
			# Images based on the set symbol
			basic land:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "c.png"
					else if styling.inverted_common_symbol then symbol_variation(symbol: set.symbol, variation: "invertedcommon")
					else symbol_variation(symbol: set.symbol, variation: "common")
			common:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "c.png"
					else if styling.inverted_common_symbol then symbol_variation(symbol: set.symbol, variation: "invertedcommon")
					else symbol_variation(symbol: set.symbol, variation: "common")
			uncommon:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "u.png"
					else symbol_variation(symbol: set.symbol, variation: "uncommon")
			rare:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "r.png"
					else symbol_variation(symbol: set.symbol, variation: "rare")
			mythic rare:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "m.png"
					else symbol_variation(symbol: set.symbol, variation: "mythic rare")
			special:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "s.png"
					else symbol_variation(symbol: set.symbol, variation: "special")
			masterpiece:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "mp.png"
					else symbol_variation(symbol: set.masterpiece_symbol, variation: "mythic rare")
	############################# Text box
	text:
		left: 105
		top: {458 + chop_top()}
		width: 407
		height: { (if use_fuse() then 210 else 240)-chop_bot() }
		font:
			name: { if use_phyrexian_font() then "Phi_horizontal_gbrsh_3.0" else if set.card_language != "简体中文" then "MPlantin" else ch_font() }
			italic name: { if use_phyrexian_font() then "Phi_horizontal_gbrsh_3.0" else if set.card_language != "简体中文" then "MPlantin-Italic" else ch_flavor_font() }
			size: { left_font_size() }
			scale down to: 6
			color: black
		symbol font:
			name: { styling.text_box_mana_symbols }
			size: { left_font_size() }
		alignment:
			script:
				if (styling.center_text == "short text only" and
				   not contains(match:"\n", card.rule_text) and
				   card.flavor_text == "<i-flavor></i-flavor>" and
				   card_style.text.content_lines <= 2) or
				   styling.center_text == "always"
				then "middle center"
				else "middle left"
				+ if styling.justify_text == "yes" then " justify-all" else if styling.justify_text == "force justify" then " force justify-all" else ""
		z index: 2
		padding left:   6
		padding right:  {4 + chop_right()}
		line height hard: 1.1
		line height line: { if chinese_new_font() then 1.6 else 1.5 }
		line height soft: { if chinese_new_font() then 1.0 else 0.9 }
		line height hard max: 1.2
		line height line max: { if chinese_new_font() then 1.7 else 1.6 }

	text 2:
		left: 585
		top: {458 + chop_top()}
		width: 407
		height: { (if use_fuse() then 210 else 240)-chop_bot() }
		font:
			name: { if use_phyrexian_font() then "Phi_horizontal_gbrsh_3.0" else if set.card_language != "简体中文" then "MPlantin" else ch_font() }
			italic name: { if use_phyrexian_font() then "Phi_horizontal_gbrsh_3.0" else if set.card_language != "简体中文" then "MPlantin-Italic" else ch_flavor_font() }
			size: { right_font_size() }
			scale down to: 6
			color: black
		symbol font:
			name: { styling.text_box_mana_symbols }
			size: { right_font_size() }
		alignment:
			script:
				if (styling.center_text_2 == "short text only" and
				   not contains(match:"\n", card.rule_text_2) and
				   card.flavor_text_2 == "<i-flavor></i-flavor>" and
				   card_style.text_2.content_lines <= 2) or
				   styling.center_text_2 == "always"
				then "middle center"
				else "middle left"
				+ if styling.justify_text == "yes" then " justify-all" else if styling.justify_text == "force justify" then " force justify-all" else ""
		z index: 2
		padding left:   6
		padding right:  {4 + chop_right()}
		line height hard: 1.1
		line height line: { if chinese_new_font() then 1.6 else 1.5 }
		line height soft: { if chinese_new_font() then 1.0 else 0.9 }
		line height hard max: 1.2
		line height line max: { if chinese_new_font() then 1.7 else 1.6 }
	
	rule text 3:
		top : 678
		left: { 550 - max(890,card_style.rule_text_3.content_width)*0.5 }
		right: { 550 + max(890,card_style.rule_text_3.content_width)*0.5 }
		height: 36
		font:
			name: { if use_phyrexian_font() then "Phi_horizontal_gbrsh_3.0" else if set.card_language != "简体中文" then "MPlantin" else ch_font() }
			italic name: { if use_phyrexian_font() then "Phi_horizontal_gbrsh_3.0" else if set.card_language != "简体中文" then "MPlantin-Italic" else ch_flavor_font() }
			size: 22
			scale down to: 6
			color: black
		symbol font:
			name: { styling.text_box_mana_symbols }
			size: 24
		alignment: "middle center"
		z index: 3
		padding left:   2
		padding right:  2
		line height hard: 1.2
		line height line: 1.5
		line height soft: 0.9
	
	watermark:
		left: {100.5}
		top: {473-4}
		width: {421}
		height: {( if use_fuse() then 193 else 233 )-4}
		z index: 1
		render style: image
		popup style: in place
		alignment: middle center
		include file: /magic-watermarks.mse-include/watermarks
	watermark 2:
		left: {580}
		top: {473-4}
		width: {421}
		height: {( if use_fuse() then 193 else 233 )-4}
		z index: 1
		render style: image
		popup style: in place
		alignment: middle center
		include file: /magic-watermarks.mse-include/watermarks_back

	############################# Card sorting / numbering
	set code:
		left: {1050-998}
		top: 48.5
		width: 80
		height: 20
		z index: 1
		angle: 270
		alignment: middle left
		font:
			name: Magic Gotham Medium
			size: {13-shrink_setcode()}
			color: white

	language code:
		left: {1050-998}
		top: 106
		width: 10
		height: 20
		z index: 1
		angle: 270
		alignment: middle left
		font:
			name: Magic Gotham Medium
			size: {13-shrink_setcode()}
			color: white
	############################# Copyright stuff
	illustrator:
		left: {1050-997}
		top: 166
		width: 400
		height: 20
		z index: 1
		angle: 270
		font:
			name: { if is_pureEN(card.illustrator) then "Beleren Small Caps Bold" else "华康魏碑 Std W7"}
			size: 14
			color: white
	copyright:
		left: {1050-981}
		top: 699
		width: 252
		height: 20
		z index: 2
		angle: 270
		alignment: middle right shrink-overflow
		visible: {not set.automatic_copyright}
		font:
			name: mplantin
			size: 13
			color: white
############################################################## Extra card fields
extra card field:
	type: text
	name: dot
	script: if styling.is_foil then "★" else "•"
	save value: false
	editable: false
	show statistics: false
extra card field:
	type: text
	name: card code
	save value: false
	editable: false
	script: rarity_code()
extra card field:
	type: text
	name: card number
	save value: false
	script:
		if set.automatic_card_numbers and not styling.remove_from_autocount then
			forward_editor(prefix: card_number_m15(), field: card.card_code_text) 
		else
			forward_editor(prefix: "", field: card.custom_card_number)

extra card field:
	type: choice
	name: artist arrow
	editable: false
	save value: false
	choice: white
extra card field:
	type: choice
	name: fuse_bridge
	script: "true"
	editable: false
	save value: false
	show statistics: false
extra card field:
	type: choice
	name: stamp
	script: card.card_color
	editable: false
	save value: false
extra card field:
	type: choice
	name: foil stamp
	choice: stamp
	save value: false
	editable: false

extra card field:
	type: text
	name: auto copyright
	script: set.copyright
	save value: false
	editable: false
	show statistics: false

extra card field:
	type: choice
	name: flavor bar
	choice: bar
	editable: false
	save value: false
	show statistics: false
extra card field:
	type: choice
	name: flavor bar 2
	choice: bar
	editable: false
	save value: false
	show statistics: false

extra card field:
	type: choice
	name: background
	script: "true"
	editable: false
	save value: false
	show statistics: false

extra card style:
	dot:
		left: 31.5
		right:51.5
		top: {48 + card_style.set_code.content_width}
		bottom: {card_style.language_code.top}
		z index: 1
		alignment: middle center
		font:
			name: Magic Gotham Medium
			size: {13-shrink_setcode()}
			color: white

	card code:
		left: {1050-979}
		top: 48.5
		width: 20
		height: 20
		z index: 1
		angle: 270
		font:
			name: Magic Gotham Medium
			size: 13
			color: white
	card number:
		left: {1050-979}
		top: 69
		width: 220
		height: 20
		z index: 1
		angle: 270
		font:
			name: Magic Gotham Medium
			size: 13
			color: white

	artist arrow:
		left: {1050-1002}
		top: { 143 }
		width: {24*0.9}
		height: {15*0.9}
		z index: 1
		angle: 270
		render style: image
		image: artist_arrow.png

	fuse_bridge:
		left: 532
		top : 668
		width: 36
		height: 54
		z index: 1
		render style: image
		image: { bridge_colored() }
		visible: { use_fuse() }
	
	stamp:
		left:	96
		top:	330
		width:	93
		height:	39
		z index: 0
		angle: 270
		visible: { is_rare() and styling.holofoil_stamped_rares }
		render style: image
		image: { "stamp/stamp.png" }

	auto copyright:
		right: {1050-981}
		top: 699
		width: 252
		height: 20
		z index: 2
		alignment: middle right shrink-overflow
		angle: 270
		visible: {set.automatic_copyright}
		font:
			name: mplantin
			size: 13
			color: white
	
	flavor bar:
		left:	70.5
		width:	479.5
		top: { bar_equation()- 4}
		height: 7
		z index: 1
		render style: image
		image: bar.png
		visible: { card.rule_text != "" and remove_tags(card.flavor_text) != "" and set.use_flavor_bar }
	flavor bar 2:
		left:	550
		width:	479.5
		top: { bar_equation2()- 4}
		height: 7
		z index: 1
		render style: image
		image: bar.png
		visible: { card.rule_text_2 != "" and remove_tags(card.flavor_text_2) != "" and set.use_flavor_bar }

	background:
		left: 0
		top: 0
		width: 1050
		height: 750
		z index: -2
		render style: image
		image: { "back.png" }