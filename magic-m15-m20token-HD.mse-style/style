mse version: 2.0.0
game: magic
short name: HDm20衍生物
full name: HD m20 token
icon: card-sample.png
installer group: magic/m15 style/normal cards
position hint: 001

version: 2021-02-16
depends on:
	package: magic.mse-game
	version: 2014-06-25
depends on:
	package: magic-default-image.mse-include
	version: 2007-09-23
depends on:
	package: magic-watermarks.mse-include
	version: 2007-09-23
depends on:
	package: magic-identity-new.mse-include
	version: 2012-01-22
depends on:
	package: magic-mana-large.mse-symbol-font
	version: 2007-09-23
depends on:
	package: magic-mana-small.mse-symbol-font
	version: 2007-09-23
depends on:
	package: magic-mainframe-extras.mse-include
	version: 2007-09-23
depends on: 
	package: magic-rarity.mse-include
	version: 2013-08-21
card width: 750
card height: 1050
card dpi: 600
 
####### images from digiman
############################################################## Extra scripts
init script:
	# Load scripts for image box
	include file: /magic-default-image.mse-include/scripts
	
	# Should hybrids have a grey name?
	mask_hybrid_with_land := { styling.grey_hybrid_name }
	
	#Should multicolor lands with basic land types have a colored name?
	mask_multi_land_with_color := { styling.colored_multicolor_land_name }
	
	template_prefix := [notext:"notext/" normalt:"normaltext/" crown:"crown/" innercrown:"crown/innercrown/" pt: "pt/" stamp: "stamp/" identity: "/magic-identity-new.mse-include/"]
	template_suffix := [notext:"card.png" normalt:"card.png" crown:"crown.png" innercrown:"crown.png" pt:"pt.png" stamp: "stamp.png" identity:"identity.png"]
	template      := { template_prefix[type] + input + crown_follow(type) + innercrown_follow(type) + template_suffix[type] }
	land_template := { template_prefix[type] + (if input == "a" then "c" else input) + crown_follow(type) + innercrown_follow(type) + template_suffix[type] }
	# Use land templates for previews because they show more contrast
	hybrid_previews := "land,hybrid"
	
	notext_background := { color_background(type:"notext",     base_hybrid:card_hybrid) }
	normalt_background := { color_background(type:"normalt",     base_hybrid:card_hybrid) }
	innercrown_background := { color_background(type:"innercrown",     base_hybrid:card_hybrid) }
	crown_background := { color_background(type:"crown",     base_hybrid:card_hybrid) }
	
	crown_follow := {
		if input == "crown" or input == "aliascrown" then if is_legend() then "l" else ""
		else ""
	}
	
	innercrown_follow := {
		if input != "innercrown" then ""
		else if styling.inner_crown_style == "nyx"
			then "nyx"
		else if styling.inner_crown_style == "companion"
			then "com"
		else ""
	}
	
	# Use the normal tap symbol
	mana_t := {
		if      styling.tap_symbol == "old"        then "old"
		else if styling.tap_symbol == "diagonal T" then "older"
		else                                            "new"
	}
	
	# Use guild mana symbols?
	guild_mana := { styling.use_guild_mana_symbols }
	
	# Is the card a promo card?
	is_promo := { styling.promo }
	card_shape := { card_shape_choose() }
	card_shape_choose := { if (styling.frames == "token" or styling.frames == "state") then "token" else ""}
	is_legend := {set.auto_legends and (contains(card.super_type, match:"Legendary") or contains(card.super_type, match:"传奇") or contains(card.type, match:"Mewk")) }
	is_nyx := { contains(card.super_type, match:"结界") and contains(card.super_type, match:"生物") }
	has_ruletext := { not (card.rule_text == "" and remove_tags(card.flavor_text) == "") }
	mana_sort := {
		if styling.unsorted_casting_cost then
			input
		else
			sort_text@(order: "XYZI[0123456789]HSCA(WUBRG)")()
	}
	ancestral_mana := { styling.ancestral_mana_symbols }
	has_identity := { styling.color_indicator_dot }
	is_unsorted := {styling.remove_from_autocount}

	chop_top := {to_number(pull_comma_array(styling.text_chops, cell:0, end:false))}
	chop_bot := {to_number(pull_comma_array(styling.text_chops, cell:1, end:false))}
	chop_correction := { chop_bot() }
	shrink_type := {if styling.shrink_typeline_text != "" then to_number(styling.shrink_typeline_text) else 0}
	shrink_name := {if styling.shrink_name_text != "" then to_number(styling.shrink_name_text) else 0}
	use_main_rarity := { contains(set.mainframe_rarity_name, match: ".png")}
	un_png := replace@(match:".png", replace: "")	
	
	use_acorn_stamp := { styling.use_acorn_stamp }
	use_phyrexian_font := { styling.use_phyrexian_font }
############################################################## Set info fields
set info style:
	symbol:
		variation:
			name: invertedcommon
			border radius: 0.10
			fill type: solid
			fill color:   rgb(255,255,255)
			border color: rgb(0,0,0)
############################################################## Extra style options
styling field:
	type: text
	name: text chops
	description: Format as "X,Y". Shrinks textbox X pixels from the top and Y from bottom.
styling field:
	type: text
	name: shrink name text
	description: Shrinks name X pixels
styling field:
	type: text
	name: shrink typeline text
	description: Shrinks type X pixels
styling field:
	type: text
	name: shrink power text
	description: Shrinks power X pixels
styling field:
	type: text
	name: font cap
	description: 所有规则文本框的字体大小，默认为28。
styling field:
	type: text
	name: font cap 2
	description: state规则文本框的字体大小，默认为28。
styling field:
	type: choice
	name: frames
	description: 使用边框
	choice: token
	choice: state
	choice: attraction
	initial: token
styling field:
	type: choice
	name: inner crown style
	description: 传奇里边框
	choice: common
	choice: nyx
	choice: companion
	initial: common
styling field:
	type: boolean
	name: use holofoil stamps
	description: Change to no to disable rare holofoil stamps
styling field:
	type: boolean
	name: is foil
	description: 是否为闪卡？
	initial: no
styling field:
	type: multiple choice
	name: attraction visit
	description: 景点拜访点数
	choice: 1
	choice: 2
	choice: 3
	choice: 4
	choice: 5
	choice: 6
	initial: 6
styling field:
	type: boolean
	name: use acorn stamp
	description: use acorn stamp if its is Un- card
	initial: no
styling field:
	type: boolean
	name: use phyrexian font
	description: use phyrexian font if its is phyrexian card
	initial: no
styling field:
	type: boolean
	name: color indicator dot
	description: Use the color indicator dot
	initial: no
styling field:
	type: boolean
	name: remove from autocount
	description: Removes the automatic card number for specific cards, to allow for overcounted cards like in Planeswalker Decks.
	initial: no
styling field:
	type: boolean
	name: grey hybrid name
	description: Use a grey background for the name and type line on hybrid cards. This is done on real cards.
styling field:
	type: boolean
	name: unsorted casting cost
	description: Disables automatic mana symbol sorting.
	initial: no
styling field:
	type: boolean
	name: ancestral mana symbols
	description: Enables ancestral's modified generic mana.
	initial: no
styling field:
	type: boolean
	name: colored multicolor land name
	description: Use a colored background for the name and type on multicolor land cards with a basic land type. This is done on real cards.
styling field:
	type: boolean
	name: use guild mana symbols
	description: Use the Ravnica guild symbols instead of the official half/half circles for hybrid mana.
	initial: no
styling field:
	type: choice
	name: tap symbol
	description: What tap and untap symbols should be used on cards?
	initial: modern
	choice: modern
	choice: old
	choice: diagonal T
styling field:
	type: package choice
	name: text box mana symbols
	match: magic-mana-*.mse-symbol-font
	initial: magic-mana-small.mse-symbol-font
styling field:
	type: choice
	name: center text
	description: When to center text (short text only means only on one-line cards with no flavor text)
	choice: always
	choice: short text only
	choice: never
	initial: never
styling field:
	type: boolean
	name: promo
	description: Is this card a promo card, with the "P" rarity?
	initial: no
styling field:
	type: boolean
	name: masterpiece
	description: Is this card a Masterpiece?
	initial: no
styling field:
	type: boolean
	name: inverted common symbol
	description: Should the common rarity symbol be inverted, like in Coldsnap?
	initial: no
styling field:
	type: package choice
	name: overlay
	description: Should there be an overlay applied, such as foil?
	match: magic-overlay-*.mse-include
	required: false
styling style:
	use guild mana symbols:
		choice images:
			yes: /magic-mana-small.mse-symbol-font/mana_guild_rg.png
			no:  /magic-mana-small.mse-symbol-font/mana_rg.png
	tap symbol:
		render style: both
		choice images:
			modern:     /magic-mana-large.mse-symbol-font/mana_t.png
			old:        /magic-mana-large.mse-symbol-font/mana_t_old.png
			diagonal T: /magic-mana-large.mse-symbol-font/mana_t_older.png
	center text:
		render style: both
		choice images:
			always:          /magic.mse-game/icons/center-all-text.png
			short text only: /magic.mse-game/icons/center-short-text.png
			never:           /magic.mse-game/icons/center-no-text.png
	inverted common symbol:
		choice images:
			no:  { symbol_variation(symbol: set.symbol, variation: "common") }
			yes: { symbol_variation(symbol: set.symbol, variation: "invertedcommon") }
	attraction visit:
		render style: checklist
		direction: vertical
styling field:
	type: choice
	name: CHNFlavorsize
	initial: 25
	choice:	20
	choice:	20.33
	choice:	20.67
	choice:	21
	choice:	21.33
	choice:	21.67
	choice:	22
	choice:	22.33
	choice:	22.67
	choice:	23
	choice:	23.33
	choice:	23.67
	choice:	24
	choice:	24.33
	choice:	24.67
	choice:	25
	choice:	25.33
	choice:	25.67
	choice:	26
	choice:	26.33
	choice:	26.67
	choice:	27
	choice:	27.33
	choice:	27.67
	choice:	28
	choice:	28.33
	choice:	28.67
	choice:	29
	choice:	29.33
	choice:	29.67
	choice:	30
	choice:	30.33
	choice:	30.67
	choice:	31
	choice:	31.33
	choice:	31.67
	choice:	32
	choice:	32.33
	choice:	32.67
	choice:	33
	choice:	33.33
	choice:	33.67
	choice:	34
############################################################## Card fields
card style:
	############################# Background stuff
	card color:
		left:	0
		top:	0
		width: 750
		height: 1050
		z index: 1
		render style: image
		popup style: in place
		image: { if styling.frames == "state" then "state/card.png" else if styling.frames == "attraction" then if (styling.font_cap_2 == "64") then "attraction/attraction2.png" else "attraction/card.png" else if has_ruletext() then normalt_background() else notext_background() }
		mask: { (if styling.frames == "state" then "state/" else if styling.frames == "attraction" then "attraction/" else if has_ruletext() then "normaltext/" else "notext/") + (if styling.frames == "attraction" and styling.font_cap_2 == "64" then "frame_mask2.png" else "frame_mask.png") }
	############################# Name line
	name:
		left: {375 - max(100,card_style.name.content_width)*0.5}
		top: { 58 + (if set.card_language != "简体中文" then 3 else 0) + (if use_phyrexian_font() then shrink_name()/2 else 0)}
		right: { 375 + max(100,card_style.name.content_width)*0.5 }
		height: {46 - 0.5*shrink_name()}
		alignment: { if use_phyrexian_font() then "top center shrink-overflow" else "bottom center shrink-overflow"}
		padding bottom: 0
		z index: 5
		font:
			name: { if use_phyrexian_font() then "Phi_horizontal_gbrsh_3.0" else if set.card_language != "简体中文" then if styling.frames == "attraction" then "Beleren Bold" else "Beleren Small Caps Bold" else "华康魏碑 Std W7" }
			size: { if set.card_language != "简体中文" then 32 - shrink_name() else 34 - shrink_name()}
			color: { if card.card_color == "white" then "black" else "white" }
	############################# Image   else if styling.frames=="" then else
	image:
		left: { if styling.frames == "attraction" then 0 else 30 }
		top: { if styling.frames == "attraction" then 0 else 30 }
		width: { if styling.frames == "attraction" then 750 else 692 }
		height: { 940 }
		
		z index: -1
		default: {default_image(card.card_color)}
		mask:{if styling.frames == "attraction" then "attraction/image_mask.png" else ""}
	############################# Card type
	type:
		left: { 62 }
		top: { if styling.frames == "attraction" then (598 + shrink_type()/2) else ((if styling.frames == "state" then 1000 else 0) + shrink_type()/2 + 714 + (if has_ruletext() then 0 else 149) + (if set.card_language != "简体中文" then 0 else -2))}
		width: { 610 - max(44,card_style.rarity.content_width) }
		height: { 40 - shrink_type() }
		alignment: top shrink-overflow
		z index: 2
		padding top: 2
		font:
			name: { if use_phyrexian_font() then "Phi_horizontal_gbrsh_3.0" else if set.card_language != "简体中文" then "Beleren Bold" else "华康魏碑 Std W7" }
			size: { if set.card_language != "简体中文" then 26 - shrink_type() else 32 - shrink_type() }
			color: {if styling.frames == "attraction" then "white" else "black"}
			separator color: red
	rarity:
		right: 688
		top: { if styling.frames == "attraction" then 598 else ((if styling.frames == "state" then 1000 else 0) + 714 + (if has_ruletext() then 0 else 149)) }
		width: 88
		height: 44
		z index: 2
		render style: image
		alignment: middle right
		include file: /magic-rarity.mse-include/rarity
		choice images:
			# Images based on the set symbol
			basic land:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "c.png"
					else if styling.inverted_common_symbol then symbol_variation(symbol: set.symbol, variation: "invertedcommon")
					else symbol_variation(symbol: set.symbol, variation: "common")
			common:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "c.png"
					else if styling.inverted_common_symbol then symbol_variation(symbol: set.symbol, variation: "invertedcommon")
					else symbol_variation(symbol: set.symbol, variation: "common")
			uncommon:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "u.png"
					else symbol_variation(symbol: set.symbol, variation: "uncommon")
			rare:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "r.png"
					else symbol_variation(symbol: set.symbol, variation: "rare")
			mythic rare:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "m.png"
					else symbol_variation(symbol: set.symbol, variation: "mythic rare")
			special:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "s.png"
					else symbol_variation(symbol: set.symbol, variation: "special")
			masterpiece:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "mp.png"
					else symbol_variation(symbol: set.masterpiece_symbol, variation: "mythic rare")
	############################# Text box
	text:
		left: { 58 }
		top: {(if styling.frames == "state" or styling.frames == "attraction" then 654 else if has_ruletext() then 776 else 925) +chop_top() }
		width: { if styling.frames == "attraction" then 616 else 636 }
		bottom: {970-chop_bot()}
		font:
			name: { if use_phyrexian_font() then "Phi_horizontal_gbrsh_3.0" else if set.card_language != "简体中文" then "MPlantin" else "方正细等线_GBK_FIX" }
			italic name: { if use_phyrexian_font() then "Phi_horizontal_gbrsh_3.0" else if set.card_language != "简体中文" then "MPlantin-Italic" else "Magic华文楷体" }
			size: {if styling.font_cap != "" then to_number(styling.font_cap) else 28 }
			scale down to: 6
			color: {if styling.frames == "state" then "white" else "black"}
		symbol font:
			name: { styling.text_box_mana_symbols }
			size: {if styling.font_cap != "" then to_number(styling.font_cap) else 28 }
			scale down to: 6
		alignment:
			script:
				if (styling.center_text == "short text only" and
				   not contains(match:"\n", card.rule_text) and
				   card.flavor_text == "<i-flavor></i-flavor>" and
				   card_style.text.content_lines <= 2) or
				   styling.center_text == "always"
				then "middle center"
				else "middle left"
		z index: 2
		padding left:   6
		padding right:  4
		line height hard: {if is_modal(card.rule_text) then 0.9 else 1.1 }
		line height line: 1.5
		line height soft: 0.9
		line height hard max: {if is_modal(card.rule_text) then 1.0 else 1.2 }
		line height line max: 1.6
	rule text 2:
		top: 120
		left: 58
		width: {if styling.frames == "state" then 630 else 0}
		height: 140
		font:
			name: { if use_phyrexian_font() then "Phi_horizontal_gbrsh_3.0" else if set.card_language != "简体中文" then "MPlantin" else "方正细等线_GBK_FIX" }
			italic name: { if use_phyrexian_font() then "Phi_horizontal_gbrsh_3.0" else if set.card_language != "简体中文" then "MPlantin-Italic" else "Magic华文楷体" }
			size: { if styling.font_cap_2 != "" then to_number(styling.font_cap_2) else 28 }
			scale down to: 8
			color: {"white"}
			#shadow color: {if not use_drop_shadow() then rgba(0,0,0,0) else if white_state_font() then "black" else "white"}
			#shadow displacement x: -1
			#shadow displacement y: 1
		symbol font:
			name: { styling.text_box_mana_symbols }
			size: { if styling.font_cap_2 != "" then to_number(styling.font_cap_2) else 28 }
		alignment:
			script:
				if (styling.center_text == "short text only" and
				   card_style.text_2.content_lines <= 2 and
				   not contains(match: ".", card.rule_text_2) and
				   not contains(match: ";", card.rule_text_2) and
				   not contains(match: ":", card.rule_text_2) and
				   not contains(match: "!", card.rule_text_2) and
				   not contains(match: "?", card.rule_text_2) and
				   card.flavor_text == "<i-flavor></i-flavor>") or
				   styling.center_text == "always"
				then "top center shrink-overflow"
				else "top left shrink-overflow"
		z index: 2
		padding left:   6
		padding top:    2
		padding right:  4
		padding bottom: 2
		line height hard: 1.2
		line height line: 1.5
		line height soft: 0.9
	watermark:
		left: { 50 }
		top: { if styling.frames == "state" or styling.frames == "attraction" then 660 else if has_ruletext() then 780 else 930 }
		width: { 650 }
		bottom: {960-chop_bot()}
		z index: 1
		render style: image
		popup style: in place
		alignment: middle center
		include file: /magic-watermarks.mse-include/watermarks
	############################# PT
	pt:
		z index: 5
		left: 586
		top: 936
		width: 120
		height:	56
		alignment: center middle shrink-overflow
		font:
			name:  { if use_phyrexian_font() then "GeishaHolidayW00-Regular" else "Beleren Bold" }
			size: {32 - (if styling.shrink_power_text != "" then to_number(styling.shrink_power_text) else 0)}
			color: {"black"}
			separator color: red
	############################# Card sorting / numbering
	set code:
		left: 48
		top: 996
		width: 80
		height: 20
		z index: 1
		font:
			name: Magic Gotham Medium
			size: 14
			color: white
			weight: bold
	############################# Copyright stuff
	illustrator:
		left: { 80 + card_style.set_code.content_width }
		top: 995
		width: 400
		height: 20
		z index: 1
		font:
			name: { if is_pureEN(card.illustrator) then "Beleren Small Caps Bold" else "华康魏碑 Std W7"}
			size: 14.5
			color: white
	copyright:
		right: 700
		top: 1000
		width: 280
		height: 20
		z index: 2
		visible: {not set.automatic_copyright}
		alignment: middle right shrink-overflow
		font:
			name: Matrix
			size: 14
			color: white
			weight: bold
############################################################## Extra card fields
extra card field:
	type: text
	name: card code
	save value: false
	script:
		if set.automatic_card_numbers and not styling.remove_from_autocount then
			forward_editor(prefix: (if styling.frames == "state" then "H" else rarity_code()) + "<size:10>  </size>" + card_number_m15() + " ", field: card.card_code_text) 
		else
			combined_editor(field1: card.card_code_text, separator: "" + (if styling.frames == "state" then "H" else rarity_code()) + "<size:10>  </size>", field2: card.custom_card_number)
extra card field:
	type: choice
	name: artist arrow
	editable: false
	save value: false
	choice: white
extra card field:
	type: choice
	name: pt box
	script: card.card_color
	editable: false
	save value: false

extra card field:
	type: text
	name: auto copyright
	script: set.copyright
	save value: false
	editable: false
	show statistics: false
extra card field:
	type: choice
	name: flavor bar
	choice: bar
	editable: false
	save value: false
	show statistics: false

extra card field:
	type: choice
	name: crown
	script: card.card_color
	editable: false
extra card field:
	type: choice
	name: innercrown
	script: card.card_color
	editable: false
extra card field:
	type: choice
	name: state fade
	script: card.card_color
	editable: false
extra card field:
	type: choice
	name: stamp
	script: card.card_color
	editable: false

extra card field:
	type: choice
	name: 1
	choice: bar
	editable: false
	save value: false
	show statistics: false
extra card field:
	type: choice
	name: 2
	choice: bar
	editable: false
	save value: false
	show statistics: false
extra card field:
	type: choice
	name: 3
	choice: bar
	editable: false
	save value: false
	show statistics: false
extra card field:
	type: choice
	name: 4
	choice: bar
	editable: false
	save value: false
	show statistics: false
extra card field:
	type: choice
	name: 5
	choice: bar
	editable: false
	save value: false
	show statistics: false
extra card field:
	type: choice
	name: 6
	choice: bar
	editable: false
	save value: false
	show statistics: false
extra card field:
	type: choice
	name: acorn stamp
	choice: bar
	editable: false
	save value: false
	show statistics: false


extra card style:
	card code:
		left: 48
		top: 976
		width: 240
		height: 20
		z index: 1
		font:
			name: Magic Gotham Medium
			size: 14
			color: white
			weight: bold
	artist arrow:
		left: { 56 + card_style.set_code.content_width }
		top: 1000
		width: 24
		height: 15
		z index: 1
		render style: image
		image: artist_arrow.png
	pt box:
		left:	0
		top:	0
		width:	750
		height:	1050
		z index: 4
		visible: { card.pt != "" }
		render style: image
		image: { card_ptbox() }
	crown:
		left: 0
		top: 0
		width:	750
		height:	1050
		render style: image
		image: { crown_background() }
		z index: 1
		visible: {(styling.frames != "state" and styling.frames != "attraction") and is_legend() }
	innercrown:
		left: 0
		top: 0
		width:	750
		height:	1050
		render style: image
		image: {if styling.inner_crown_style == "common" and not is_nyx() then "" else innercrown_background() }
		z index: 3
		visible: {(styling.frames != "state" and styling.frames != "attraction") and is_legend() }
	auto copyright:
		right: 700
		top: { if card.pt != "" then 998 else 978 }
		width: 280
		height: 20
		z index: 2
		alignment: middle right shrink-overflow
		visible: {set.automatic_copyright}
		font:
			name: mplantin
			size: 12
			color: white
			weight: bold
	flavor bar:
		left: 0
		top: { bar_equation() -4}
		width: 750
		height: 7
		z index: 4
		render style: image
		image: bar.png
		visible: { card.rule_text != "" and remove_tags(card.flavor_text) != "" and set.use_flavor_bar }
	state fade:
		left: 0
		top: 0
		width:	750
		height:	1050
		render style: image
		image: {"state/fade.png"}
		z index: 0
		visible: {styling.frames == "state" }
	stamp:
		left:	327
		top:	948
		width:	96
		height:	49
		z index: 5
		visible: { is_rare() or styling.use_holofoil_stamps or use_acorn_stamp() }
		render style: image
		image: { if styling.frames == "attraction" then "stamp/attrstamp.png" else card_stamp() }
		mask: {if styling.frames == "state" then "stamp/stampmask.png" else ""}
		
		
		
	acorn stamp:
		left: 0
		top: 0
		width:	750
		height:	1050
		render style: image
		image: {"acorn_stamp.png"}
		z index: 5
		visible: {use_acorn_stamp()}
	1:
		left: 0
		top: 0
		width:	750
		height:	1050
		render style: image
		image: {"attraction/1.png"}
		z index: 5
		visible: {styling.frames == "attraction" and chosen(styling.attraction_visit, choice:"1")}
	2:
		left: 0
		top: 0
		width:	750
		height:	1050
		render style: image
		image: {"attraction/2.png"}
		z index: 5
		visible: {styling.frames == "attraction" and chosen(styling.attraction_visit, choice:"2")}
	3:
		left: 0
		top: 0
		width:	750
		height:	1050
		render style: image
		image: {"attraction/3.png"}
		z index: 5
		visible: {styling.frames == "attraction" and chosen(styling.attraction_visit, choice:"3")}
	4:
		left: 0
		top: 0
		width:	750
		height:	1050
		render style: image
		image: {"attraction/4.png"}
		z index: 5
		visible: {styling.frames == "attraction" and chosen(styling.attraction_visit, choice:"4")}
	5:
		left: 0
		top: 0
		width:	750
		height:	1050
		render style: image
		image: {"attraction/5.png"}
		z index: 5
		visible: {styling.frames == "attraction" and chosen(styling.attraction_visit, choice:"5")}
	6:
		left: 0
		top: 0
		width:	750
		height:	1050
		render style: image
		image: {"attraction/6.png"}
		z index: 5
		visible: {styling.frames == "attraction" and chosen(styling.attraction_visit, choice:"6")}