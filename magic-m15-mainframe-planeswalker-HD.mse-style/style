mse version: 2.0.0
game: magic
short name: HD鹏洛客
full name: HD planeswalker
installer group: magic/m15 style/planeswalkers
icon: card-sample.png
position hint: 001

version: 2020-03-19
depends on:
	package: magic.mse-game
	version: 2014-06-25
depends on:
	package: magic-watermarks.mse-include
	version: 2007-09-23
depends on:
	package: magic-mana-large.mse-symbol-font
	version: 2007-09-23
depends on:
	package: magic-mana-small.mse-symbol-font
	version: 2007-09-23
depends on:
	package: magic-identity-new.mse-include
	version: 2012-01-22
depends on:
	package: magic-mainframe-extras.mse-include
	version: 2017-05-05
depends on:
	package: magic-pride.mse-include
	version: 2021-05-26
depends on: 
	package: magic-rarity.mse-include
	version: 2013-08-21

card width: 750
card height: 1050
card dpi: 600
# width*2，height*2
########## new frames by silverback_ape
############################################################## Extra scripts
init script:
	include file: /magic-pride.mse-include/scripts
	# Should hybrids have a grey name?
	mask_hybrid_with_land := { styling.grey_hybrid_name }
	mainframe_walker := {true}
	text_filter := text_filter + {apply_margins(input, name:margin_code)} + {add_spacers(input, name:margin_code)}
	template_prefix := [
	card: "normal/new3/" card2: "normal/new4/" card3: "normal/bl3/" card4: "normal/bl4/" alias3: "normal/alias3/" alias4: "normal/alias4/"
	card5: "normal/compleat4/" compleatstamp: "normal/compleat4/stamp/"
	stamp: "stamp/" identity: "/magic-identity-new.mse-include/"
	]
	template_suffix := [
	card: "card.png" card2: "card2.png" card3: "card3.png" card4: "card4.png" alias3: "card3.png" alias4: "card4.png"
	card5: "card.png" compleatstamp: "stamp.png"
	stamp: "stamp.png" identity: "identity.png"
	]
	template      := { template_prefix[type] + input + template_suffix[type] }
	land_template := { template_prefix[type] + "c" + template_suffix[type] }
	
	# Use land templates for previews because they show more contrast
	hybrid_previews := "land,hybrid"

	# This will create two seperate card faces
	card_tall := { color_background(type:"card2", base_hybrid:card_hybrid) }

	card_compleat := { color_background(type:"card5", base_hybrid:card_hybrid) }
	compleat_stamp := { color_background(type:"compleatstamp", base_hybrid:stamp_hybrid) }

	# bl=borderless
	card_bl := { color_background(type:"card3", base_hybrid:card_hybrid) }
	card_bl_tall := { color_background(type:"card4", base_hybrid:card_hybrid) }
	card_alias := { color_background(type:"alias3", base_hybrid:card_hybrid) }
	card_alias_tall := { color_background(type:"alias4", base_hybrid:card_hybrid) }


	# Use the normal tap symbol
	mana_t := {
		if      styling.tap_symbol == "old"        then "old"
		else if styling.tap_symbol == "diagonal T" then "older"
		else                                            "new"
	}
	
	# Use guild mana symbols?
	guild_mana := { styling.use_guild_mana_symbols }	

	
	# Loyalty cost arrows
	loyalty_image := {
		if      contains(input, match: "+") then "loyalty up"
		else if contains(input, match: "-") then "loyalty down"
		else                                     "loyalty naught"
	}
	
	card_shape := {"planeswalker"}
	
	# Is the card a promo card?
	is_promo := { styling.promo }
	# Does the card have four abilities?
	has_four_abilities := { max_level() > 3 or force_tall()}
	has_two_abilities := { max_level() < 3 }
	is_stamped := { is_rare() and styling.holofoil_stamped_rares }
	is_normal_size := { not contains(styling.other_options, match:"bigger image size") }
	use_full_art := { contains(styling.other_options, match:"mythic edition fullart") or contains(styling.other_options, match:"alias fullart frame") or contains(styling.other_options, match:"fullart black twins")}
	mask_script := {
		if contains(styling.custom_mask, match:".png") then "/magic-mainframe-extras.mse-include/" + styling.custom_mask
		else if use_full_art() then "fortress_imagemask.png"
		else ""
	}
	is_level_walker := { true }
	unindent := { contains(styling.other_options, match:"un-indent nonloyalty abilities")}

	comma_count := filter_text@(match:",")
	paragraph_count := 
		replace@(match:"<soft-line>\n", replace:"")+
		filter_text@(match:"\n")
	
	loyal_move := { pull_comma_array(styling.shift_loyalty_costs, cell:0, end:0, default:0)}
	loyal_move2 := { if card.level_2_text == "" or card.level_2_text == "​" then -30 else pull_comma_array(styling.shift_loyalty_costs, cell:1, end:0, default:0)}
	loyal_move3 := { if card.level_3_text == "" or card.level_3_text == "​" then -10 else pull_comma_array(styling.shift_loyalty_costs, cell:2, end:0, default:0)}
	loyal_move4 := { pull_comma_array(styling.shift_loyalty_costs, cell:3, end:0, default:0)}
	loyal_move5 := { pull_comma_array(styling.shift_loyalty_costs, cell:4, end:0, default:0)}
	loyal_move6 := { pull_comma_array(styling.shift_loyalty_costs, cell:5, end:0, default:0)}


	global_chop_top := { to_int(pull_comma_array(styling.combined_chop, cell:0, end:0, default:0))}
	global_chop_bot := { to_int(pull_comma_array(styling.combined_chop, cell:1, end:0, default:0))}
	global_chop_right := { to_int(pull_comma_array(styling.combined_chop, cell:3, end:0, default:0))}
	top_of_textbox := {if has_four_abilities() then ( 590 + global_chop_top() + (if is_clear() then 10 else 0) ) else ( 658 + global_chop_top() ) }


	# text_size := { 14 -(if styling.font_size == "" then 0 else if contains(styling.font_size, match: ".5") then to_int(split_text(match:".5", styling.font_size).0) else styling.font_size) }
	stripe01 := {if length(card_style.text.layout.separators) or else 0 > 0 then card_style.text.top + card_style.text.layout.separators[0] + stripe_adj(top:0, bot:1) else 0}
	stripe12 := {if length(card_style.text.layout.separators) or else 0 > 1 then card_style.text.top + card_style.text.layout.separators[1] + stripe_adj(top:0, bot:1) else 0}
	stripe23 := {if length(card_style.text.layout.separators) or else 0 > 2 then card_style.text.top + card_style.text.layout.separators[2] + stripe_adj(top:0, bot:1) else 0}
	stripe34 := {if length(card_style.text.layout.separators) or else 0 > 3 then card_style.text.top + card_style.text.layout.separators[3] + stripe_adj(top:0, bot:1) else 0}
	stripe45 := {if length(card_style.text.layout.separators) or else 0 > 4 then card_style.text.top + card_style.text.layout.separators[4] + stripe_adj(top:0, bot:1) else 0}
	stripe_adj := {-4}

	abil_center := { if card_style.text.layout.blocks[input].bottom or else 0 > 0 then
			card_style.text.top + card_style.text.layout.blocks[input].middle + overlap_check(input)
		else -60	
	}
	overlap_check := {
		if input == 0
			then 0
		else if card_style.text.layout.blocks[input].middle == card_style.text.layout.blocks[input-1].middle
			then 2*40*(input-1)
		else 0
	}
	
	
	
	max_level := {max_level_function[force_level()]()}	
	max_level_function := [
		"auto": {
			if card.level_6_text != "" and card.level_6_text != "​" then 6
			else if card.level_5_text != "" and card.level_5_text != "​" then 5
			else if card.level_4_text != "" and card.level_4_text != "​" then 4
			else if card.level_3_text != "" and card.level_3_text != "​" then 3
			else 2
		},
		"one": {1},
		"two": {2},
		"three": {3},
		"four": {4},
		"five": {5},
		"six": {6},
	]

	mainframe_walker_text_script := {
		if max_level() == 1 or (max_level() == 2 and card.level_2_text == "") or force_level() == "two" then 
			combined_editor(field1: card.level_1_text, separator1: "<line>\n</line>", field2: card.level_2_text)
			
		else if max_level() == 2 or force_level() == "three" then 
			combined_editor(field1: card.level_1_text, separator1: "<line>\n</line>", field2: card.level_2_text, separator2: "<line>\n</line>", field3: card.level_3_text)
			
		else if max_level() == 3 or force_level() == "four" then 
			combined_editor(field1: card.level_1_text, separator1: "<line>\n</line>", field2: card.level_2_text, separator2: "<line>\n</line>", field3: card.level_3_text, separator3: "<line>\n</line>", field4: card.level_4_text)
			
		else if max_level() == 4 or force_level() == "five" then 
			combined_editor(field1: card.level_1_text, separator1: "<line>\n</line>", field2: card.level_2_text, separator2: "<line>\n</line>", field3: card.level_3_text, separator3: "<line>\n</line>", field4: card.level_4_text, separator4: "<line>\n</line>", field5: card.level_5_text)
			
		else if max_level() > 4 or force_level() == "six" then 
			combined_editor(field1: card.level_1_text, separator1: "<line>\n</line>", field2: card.level_2_text, separator2: "<line>\n</line>", field3: card.level_3_text, separator3: "<line>\n</line>", field4: card.level_4_text, separator4: "<line>\n</line>", field5: card.level_5_text, separator5: "<line>\n</line>", field6: card.level_6_text)
			
		else
			combined_editor(field1: card.level_1_text, separator1: "<line>\n</line>", field2: card.level_2_text, separator2: "<line>\n</line>", field3: card.level_3_text)
	}
	
	force_level := {
		if styling.override_levels == "one ability" then "one"
		else if styling.override_levels == "two abilities" then "two"
		else if styling.override_levels == "three abilities" then "three"
		else if styling.override_levels == "four abilities" then "four"
		else if styling.override_levels == "five abilities" then "five"
		else if styling.override_levels == "six abilities" then "six"
		else "auto"
	}
	
	margin_left := {
		if input == "lv1" then (if card.loyalty_cost_1 == "" and unindent() then 0 else 270)
		else if input == "lv2" then (if card.loyalty_cost_2 == "" and unindent() then 0 else 270)
		else if input == "lv3" then (if card.loyalty_cost_3 == "" and unindent() then 0 else 270)
		else if input == "lv4" then (if card.loyalty_cost_4 == "" and unindent() then 0 else 270)
		else if input == "lv5" then (if card.loyalty_cost_5 == "" and unindent() then 0 else 270)
		else if input == "lv6" then (if card.loyalty_cost_6 == "" and unindent() then 0 else 270)
		else 0
	}
	
	margin_top := {to_int(pull_comma_array(styling.combined_chop, cell:2, end:0, default:0))}
	add_spacers := { if input == "" and inner_level(name) then "​" else input}
	inner_level := {
		if input == "lv5" and max_level() > 5 then true
		else if input == "lv4" and max_level() > 4 then true
		else if input == "lv3" and max_level() > 3 then true
		else if input == "lv2" and max_level() > 2 then true
		else if input == "lv1" and max_level() > 1 then true
		else false
	}

	force_tall := { contains(styling.other_options, match:"use taller frame") or contains(styling.other_options, match:"use compleat frame")}
	has_identity := { styling.color_indicator_dot}
	is_unsorted := {styling.remove_from_autocount}
	shrink_type := {if styling.shrink_typeline_text != "" then to_number((if comma_count(styling.shrink_typeline_text) == "" then styling.shrink_typeline_text else split_text(match:",", styling.shrink_typeline_text).0)) else 0 }
	shrink_name := {if styling.shrink_name_text != "" then to_number((if comma_count(styling.shrink_name_text) == "" then styling.shrink_name_text else split_text(match:",", styling.shrink_name_text).0)) else 0 }

	use_main_rarity := { contains(set.mainframe_rarity_name, match: ".png")}
	un_png := replace@(match:".png", replace: "")
	ancestral_mana := { contains(styling.other_options, match:"ancestral generic")}
	
	#opacity := {pull_comma_array(styling.opacity, cell:input, end:false, default:50)}

	is_clear := {styling.clear or contains(styling.other_options, match:"clear frame")}
	use_phyrexian_font := { chosen(styling.other_options, choice:"use phyrexian font") }

	paragraph_count := replace@(match:"\n", replace:"~")+
		filter_text@(match:"~")
	special_text := {
		out := (if card.loyalty_cost_1 != "" then "[" + card.loyalty_cost_1 + "]: " else "") + (if card.level_1_text != "" and card.level_1_text != card.rule_text then card.level_1_text+"\n" else split_text(match:"\n", card.rule_text).0+"\n")
			+ (if card.loyalty_cost_2 != "" then "[" + card.loyalty_cost_2 + "]" + ": " else "") + (if card.level_2_text != "" then card.level_2_text+"\n" else if contains(paragraph_count(card.rule_text), match:"~") then split_text(match:"\n", card.rule_text).1+"\n" else "")
			+ (if card.loyalty_cost_3 != "" then "[" + card.loyalty_cost_3 + "]" + ": " else "") + (if card.level_3_text != "" then card.level_3_text+"\n" else if contains(paragraph_count(card.rule_text), match:"~~") then split_text(match:"\n", card.rule_text).2+"\n" else "")
			+ (if card.loyalty_cost_4 != "" then "[" + card.loyalty_cost_4 + "]" + ": " else "") + (if card.level_4_text != "" then card.level_4_text+"\n" else if contains(paragraph_count(card.rule_text), match:"~~~") then split_text(match:"\n", card.rule_text).3+"\n" else "")
			+ (if card.loyalty_cost_5 != "" then "[" + card.loyalty_cost_5 + "]" + ": " else "") + (if card.level_5_text != "" then card.level_5_text+"\n" else if contains(paragraph_count(card.rule_text), match:"~~~~") then split_text(match:"\n", card.rule_text).4+"\n" else "")
			+ (if card.loyalty_cost_6 != "" then "[" + card.loyalty_cost_6 + "]" + ": " else "") + (if card.level_6_text != "" then card.level_6_text+"\n" else if contains(paragraph_count(card.rule_text), match:"~~~~~") then split_text(match:"\n", card.rule_text).5 else "")
		out := replace(out, match:"\n\n+", replace:"")
		out
	}
	pw_font_size := { if styling.font_size != "" then styling.font_size else 24 }

	frame_choose := {
		if use_full_art() then
			if (contains(styling.other_options, match:"alias fullart frame") or contains(styling.other_options, match:"fullart black twins")) then
				if has_four_abilities() then card_alias_tall()
				else card_alias()
			else if has_four_abilities() then card_bl_tall()
			else card_bl()
		else if has_four_abilities() then if contains(styling.other_options, match:"use compleat frame") then card_compleat() else card_tall()
		else card_background()
	}

	mask_choose := {
		if contains(styling.custom_mask, match:".png") then invert_image("/magic-mainframe-extras.mse-include/" + styling.custom_mask) else
		"masks/"
		+ (if contains(styling.other_options, match:"alias fullart frame") then "alias/" else "")
		+ (if max_level() > 3 or force_tall() then "four_" else "")
		+ ( if use_full_art() then (if is_stamped() then "borderless_mask_r" else "borderless_mask") else "frame_mask" )

		+ ( if contains(styling.other_options, match:"use compleat frame") then "_c" else "" )
		
		+ ( if (not use_full_art() and chosen(choice: "colorless", card.card_color)) then "_cl" else "")
		+ ( if (not use_full_art() and chosen(choice: "colorless", card.card_color) and is_stamped()) then "_r" else "")
		+ ".png"
	}

############################################################## Set info fields
set info style:
	symbol:
		variation:
			name: invertedcommon
			border radius: 0.10
			fill type: solid
			fill color:   rgb(255,255,255)
			border color: rgb(0,0,0)
############################################################## Extra style options
styling field:
	type: text
	name: popout image style
	description: The styling instructions for the popout image field, formatted as "left,top,width,height,". The text MUST end with a comma.
styling field:
	type: text
	name: combined chop
	description: Formatted "X,Y,Z", shrinks the top X pixels, shrinks bottom Y pixels toward center, widens small stripes Z pixels.
styling field:
	type: text
	name: shift loyalty costs
	description: Moves loyalty costs up the specified amount. Use negative to move down. Formatted as "1,2,3,4,"
#styling field:
	#type: text
	#name: opacity
	#description: set opacity for stripes, from 0 to 255.
styling field:
	type: text
	name: shrink name text
	description: reduces the name text N points.
styling field:
	type: text
	name: shrink typeline text
	description: reduces the typeline text N points.
styling field:
	type: text
	name: font size
	description: Use to overwrite the font size. Default is size 12.
styling field:
	type: choice
	name: override levels
	choice: automatic
	choice: one ability
	choice: two abilities
	choice: three abilities
	choice: four abilities
	choice: five abilities
	choice: six abilities
	description: Automatically apply layers, force four abilities, or force one ability
styling field:
	type: multiple choice
	name: other options
	# choice: clear frame
	choice: bigger image size
	choice: use taller frame
	choice: use compleat frame
	choice: ancestral generic mana
	#choice: prerelease stamp
	choice: un-indent nonloyalty abilities
	choice: mythic edition fullart
	choice: fullart black twins
	choice: alias fullart frame
	choice: alias white text
	choice: use phyrexian font
	initial: un-indent nonloyalty abilities
styling field:
	type: text
	name: custom mask
	description: Uses a custom mask from data/magic-mainframe-extras.mse-include
styling field:
	type: boolean
	name: holofoil stamped rares
	description: Use holofoil stamped rares
styling field:
	type: boolean
	name: is foil
	description: 是否为闪卡？
	initial: no
styling field:
	type: boolean
	name: color indicator dot
	description: Use the color indicator dot
	initial: no
styling field:
	type: boolean
	name: remove from autocount
	description: Removes the automatic card number for specific cards, to allow for overcounted cards like in Planeswalker Decks.
	initial: no
styling field:
	type: boolean
	name: grey hybrid name
	description: Use a grey background for the name and type line on hybrid cards. This is done on real cards.
styling field:
	type: boolean
	name: use guild mana symbols
	description: Use the Ravnica guild symbols instead of the official half/half circles for hybrid mana.
	initial: no
styling field:
	type: package choice
	name: text box mana symbols
	match: magic-mana-*.mse-symbol-font
	initial: magic-mana-small.mse-symbol-font
styling field:
	type: choice
	name: tap symbol
	description: What tap and untap symbols should be used on cards?
	initial: modern
	choice: modern
	choice: old
	choice: diagonal T
styling field:
	type: choice
	name: center text
	description: When to center text (short text only means only on one-line cards with no flavor text)
	choice: always
	choice: short text only
	choice: never
	initial: never
styling field:
	type: boolean
	name: promo
	description: Is this card a promo card, with the "P" rarity?
	initial: no
styling field:
	type: boolean
	name: inverted common symbol
	description: Should the common rarity symbol be inverted, like in Coldsnap?
	initial: no
styling field:
	type: package choice
	name: overlay
	description: Should there be an overlay applied, such as foil?
	match: magic-overlay-*.mse-include
	required: false
styling field:
	type: boolean
	name: clear
	description: Use the clear frame. (depreciated)
	initial: no
styling style:
	use guild mana symbols:
		choice images:
			yes: /magic-mana-small.mse-symbol-font/mana_guild_rg.png
			no:  /magic-mana-small.mse-symbol-font/mana_rg.png
	tap symbol:
		render style: both
		choice images:
			modern:     /magic-mana-large.mse-symbol-font/mana_t.png
			old:        /magic-mana-large.mse-symbol-font/mana_t_old.png
			diagonal T: /magic-mana-large.mse-symbol-font/mana_t_older.png
	center text:
		render style: both
		choice images:
			always:          /magic.mse-game/icons/center-all-text.png
			short text only: /magic.mse-game/icons/center-short-text.png
			never:           /magic.mse-game/icons/center-no-text.png
	inverted common symbol:
		choice images:
			no:  { symbol_variation(symbol: set.symbol, variation: "common") }
			yes: { symbol_variation(symbol: set.symbol, variation: "invertedcommon") }
	other options:
		render style: checklist
		direction: vertical
styling field:
	type: choice
	name: CHNFlavorsize
	initial: 25
	choice:	20
	choice:	20.33
	choice:	20.67
	choice:	21
	choice:	21.33
	choice:	21.67
	choice:	22
	choice:	22.33
	choice:	22.67
	choice:	23
	choice:	23.33
	choice:	23.67
	choice:	24
	choice:	24.33
	choice:	24.67
	choice:	25
	choice:	25.33
	choice:	25.67
	choice:	26
	choice:	26.33
	choice:	26.67
	choice:	27
	choice:	27.33
	choice:	27.67
	choice:	28
	choice:	28.33
	choice:	28.67
	choice:	29
	choice:	29.33
	choice:	29.67
	choice:	30
	choice:	30.33
	choice:	30.67
	choice:	31
	choice:	31.33
	choice:	31.67
	choice:	32
	choice:	32.33
	choice:	32.67
	choice:	33
	choice:	33.33
	choice:	33.67
	choice:	34
styling field:
	type: text
	name: first bottom
	description: 第一技能下标栏位置修正。
styling field:
	type: text
	name: third top
	description: 第三技能上标栏位置修正。
styling field:
	type: text
	name: third bottom
	description: 第三技能下标栏位置修正。
styling field:
	type: text
	name: fifth top
	description: 第五技能上标栏位置修正。
styling field:
	type: text
	name: fifth bottom
	description: 第五技能下标栏位置修正。
		############################################################## Card fields
card style:
	############################# Background stuff
	card color:
		left:	0
		top:	0
		width:	750
		height:	1050
		z index: 0
		render style: image
		popup style: in place
		image: { frame_choose() }
		mask: { mask_choose() }
	############################# Name line
	name:
		left: 62
		top: { 44 + (if set.card_language != "简体中文" then 2 else 0) + (if use_phyrexian_font() then shrink_name()/2 else 0)}
		right:  { 682 - max(30, card_style.casting_cost.content_width) }
		height: {46 - shrink_name()}
		alignment: { if use_phyrexian_font() then "top shrink-overflow" else "bottom shrink-overflow"}
		padding bottom: 0
		z index: 5
		font:
			name: { if use_phyrexian_font() then "Phi_horizontal_gbrsh_3.0" else if set.card_language != "简体中文" then "Beleren Bold" else "华康魏碑 Std W7" }
			size: { if set.card_language != "简体中文" then 32 - shrink_name() else 34 - shrink_name()}
			color: { if (contains(styling.other_options, match:"alias fullart frame") or contains(styling.other_options, match:"fullart black twins")) then "white" else "black"}
	alias:
		left: 108
		top: 104
		width: { if contains(styling.other_options, match:"alias fullart frame") then 536 else 0}
		height: { if contains(styling.other_options, match:"alias fullart frame") then 30 else 0}
		z index: 5
		visible: { contains(styling.other_options, match:"alias fullart frame") }
		font:
			name: { if set.card_language != "简体中文" then "MPlantin-Italic" else "Magic华文楷体" }
			size: 20
			scale down to: 6
			color: white
		alignment: middle center
	casting cost:
		right: 692
		top: 44
		width: { max(60, card_style.casting_cost.content_width) + 10 }
		height: 46
		alignment: middle right
		font:
			name: MPlantin
			size: 30
		symbol font:
			name: magic-mana-large
			size: 30
			alignment: middle right
		always symbol: true
		z index: 2
		padding top: 0
	############################# Image
	image:
		left: { if use_full_art() or is_clear() then 0 else if is_normal_size() then 50 else 30 }
		top: { if use_full_art() or is_clear() then 0 else if is_normal_size() then 105 else 30 }
		width: { if use_full_art() or is_clear() then 750 else if is_normal_size() then 655 else 690 }
		height:	{ if use_full_art() or is_clear() then 1050 else if is_normal_size() then 856 else 949 }
		z index: -1
		mask:{if use_full_art() then "masks/art_mask.png" else ""}
	image 2:
		left: {if comma_count(styling.popout_image_style) == ",,,," then split_text(match:",", styling.popout_image_style).0 else "0"}
		top: {if comma_count(styling.popout_image_style) == ",,,," then split_text(match:",", styling.popout_image_style).1 else "0"}
		width: {if comma_count(styling.popout_image_style) == ",,,," then split_text(match:",", styling.popout_image_style).2 else "0"}
		height: {if comma_count(styling.popout_image_style) == ",,,," then split_text(match:",", styling.popout_image_style).3 else "0"}
		z index: 1
	############################# Card type
	indicator:
		left: 62
		top: { if has_four_abilities() then 530 else 602 }
		width: 34
		height: 34
		z index: 1
		render style: image
		visible: { has_identity() }
		image: { card_identity() }
	type:
		left: { if has_identity() then "102" else "62" }
		top: { (if has_four_abilities() then 525 else 595) + shrink_type()/2 }
		width: { (if has_identity() then "580" else "610") - max(44,card_style.rarity.content_width) }
		height: { 40 - shrink_type() }
		alignment: top shrink-overflow
		z index: 2
		padding top: 2
		font:
			name: { if use_phyrexian_font() then "Phi_horizontal_gbrsh_3.0" else if set.card_language != "简体中文" then "Beleren Bold" else "华康魏碑 Std W7" }
			size: { if set.card_language != "简体中文" then 26 - shrink_type() else 32 - shrink_type() }
			color: { if (contains(styling.other_options, match:"alias fullart frame") or contains(styling.other_options, match:"fullart black twins")) then "white" else "black"}
			separator color: red
	rarity:
		right: 688
		top: { (if has_four_abilities() then 526 else 595)  }
		width: 88
		height: 44
		z index: 2
		render style: image
		alignment: middle right
		include file: /magic-rarity.mse-include/rarity
		choice images:
			# Images based on the set symbol
			basic land:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "c.png"
					else if styling.inverted_common_symbol then symbol_variation(symbol: set.symbol, variation: "invertedcommon")
					else symbol_variation(symbol: set.symbol, variation: "common")
			common:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "c.png"
					else if styling.inverted_common_symbol then symbol_variation(symbol: set.symbol, variation: "invertedcommon")
					else symbol_variation(symbol: set.symbol, variation: "common")
			uncommon:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "u.png"
					else symbol_variation(symbol: set.symbol, variation: "uncommon")
			rare:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "r.png"
					else symbol_variation(symbol: set.symbol, variation: "rare")
			mythic rare:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "m.png"
					else symbol_variation(symbol: set.symbol, variation: "mythic rare")
			special:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "s.png"
					else symbol_variation(symbol: set.symbol, variation: "special")
			masterpiece:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "mp.png"
					else symbol_variation(symbol: set.masterpiece_symbol, variation: "mythic rare")
	############################# Text box
	text:
		left: 96
		top: { top_of_textbox() }
		width: {600 - global_chop_right()}
		bottom: {964-global_chop_bot()-(if is_stamped() then 4 else 0)}
		font:
			name: { if use_phyrexian_font() then "Phi_horizontal_gbrsh_3.0" else  if set.card_language != "简体中文" then "MPlantin" else "方正细等线_GBK_FIX" }
			italic name: { if use_phyrexian_font() then "Phi_horizontal_gbrsh_3.0" else  if set.card_language != "简体中文" then "MPlantin-Italic" else "Magic华文楷体" }
			size: { if styling.font_size != "" then styling.font_size else if has_four_abilities() then 27.6 else 28 }
			scale down to: 6
			color: { if contains(styling.other_options, match:"alias white text") then "white" else "black"}
		symbol font:
			name: { styling.text_box_mana_symbols }
			size: { if styling.font_size != "" then styling.font_size else if has_four_abilities() then 27.6 else 28 }
		alignment:
			script:
				if (styling.center_text == "short text only" and
				   not contains(match:"\n", card.rule_text) and
				   card.flavor_text == "<i-flavor></i-flavor>" and
				   card_style.text.content_lines <= 2) or
				   styling.center_text == "always"
				then "middle center"
				else "middle left"
		mask: {"walker_text_mask.png"}
		z index: 6
		padding left:   6
		padding right:  4
		padding top: 4
		line height hard: 1.2
		line height line: 1.2
		line height soft: { if has_four_abilities() then 0.9 else 0.9 }
		line height hard max: 0.5
		line height line max: 2.2
	
	watermark:
		left: 38
		top: {( if has_four_abilities() then 628 else 662 )-8}
		width: 674
		height: 300
		z index: 1
		render style: image
		popup style: in place
		alignment: middle center
		include file: /magic-watermarks.mse-include/watermarks
	############################# Loyalty
	# 初始忠诚位置
	loyalty:
		z index: 7
		left: {643.5}
		top: {928}
		width: 26.32
		height:	69.26
		alignment: center middle
		font:
			name: Beleren Bold
			size: 28
			color: white
	# 1-6忠诚异能位置
	loyalty cost 1:
		z index: 7
		left: 56
		top: { abil_center(0) - 38.6 - loyal_move() }
		width: 36
		height:	70
		alignment: center middle
		font:
			name: Beleren Bold
			size: 22
			color: white
	loyalty cost 2:
		z index: 7
		left: 56
		top: { abil_center(1) - 38.6 - loyal_move2() }
		width: 36
		height:	70
		alignment: center middle
		font:
			name: Beleren Bold
			size: 22
			color: white
	loyalty cost 3:
		z index: 7
		left: 56
		top: { abil_center(2) - 38.6 - loyal_move3() }
		width: {if card.loyalty_cost_3 != "" or max_level() > 1 then 36 else 0}
		height:	70
		alignment: center middle
		font:
			name: Beleren Bold
			size: 22
			color: white
	loyalty cost 4:
		z index: 7
		left: 56
		top: { abil_center(3) - 38.6 - loyal_move4() }
		width: {if card.loyalty_cost_4 != "" or max_level() > 2 then 36 else 0}
		height:	70
		alignment: center middle
		font:
			name: Beleren Bold
			size: 22
			color: white
	loyalty cost 5:
		z index: 7
		left: 56
		top: { abil_center(4) - 38.6 - loyal_move5() }
		width: {if card.loyalty_cost_5 != "" or max_level() > 3 then 36 else 0}
		height:	70
		alignment: center middle
		font:
			name: Beleren Bold
			size: 22
			color: white
	loyalty cost 6:
		z index: 7
		left: 56
		top: { abil_center(5) - 38.6 - loyal_move6() }
		width: {if card.loyalty_cost_6 != "" or max_level() > 4 then 36 else 0}
		height:	70
		alignment: center middle
		font:
			name: Beleren Bold
			size: 22
			color: white
	############################# Card sorting / numbering
	set code:
		left: 48
		top: 996
		width: 80
		height: 20
		z index: 1
		font:
			name: Magic Gotham Medium
			size: 14
			color: white
			weight: bold
	############################# Copyright stuff
	illustrator:
		left: { 80 + card_style.set_code.content_width }
		top: 995
		width: 400
		height: 20
		z index: 1
		font:
			name: { if is_pureEN(card.illustrator) then "Beleren Small Caps Bold" else "华康魏碑 Std W7"}
			size: 14.5
			color: white
	copyright:
		right: 700
		top: 1000
		width: 280
		height: 20
		z index: 2
		visible: {not set.automatic_copyright}
		alignment: middle right shrink-overflow
		font:
			name: Matrix
			size: 14
			color: white
			weight: bold
############################################################## Extra card fields
extra card field:
	type: text
	name: card code
	save value: false
	script:
		if set.automatic_card_numbers and not styling.remove_from_autocount then
			forward_editor(prefix: rarity_code() + "<size:10>  </size>" + card_number_m15() + " ", field: card.card_code_text) 
		else
			combined_editor(field1: card.card_code_text, separator: "" + rarity_code() + "<size:10>  </size>", field2: card.custom_card_number)
extra card field:
	type: choice
	name: artist arrow
	editable: false
	save value: false
	choice: white
extra card field:
	type: choice
	name: loyalty box
	editable: false
	choice: loyalty
	save value: false
	
extra card field:
	type: choice
	name: stamp
	script: card.card_color
	editable: false
	save value: false

extra card field:
	type: choice
	name: bar
	choice: bar
	editable: false
	save value: false
	show statistics: false

extra card field:
	type: choice
	name: loyalty cost box 1
	editable: false
	script: loyalty_image(card.loyalty_cost_1)
	save value: false
extra card field:
	type: choice
	name: loyalty cost box 2
	editable: false
	script: loyalty_image(card.loyalty_cost_2)
	save value: false
extra card field:
	type: choice
	name: loyalty cost box 3
	editable: false
	script: loyalty_image(card.loyalty_cost_3)
	save value: false
extra card field:
	type: choice
	name: loyalty cost box 4
	editable: false
	script: loyalty_image(card.loyalty_cost_4)
	save value: false
extra card field:
	type: choice
	name: loyalty cost box 5
	editable: false
	script: loyalty_image(card.loyalty_cost_5)
	save value: false
extra card field:
	type: choice
	name: loyalty cost box 6
	editable: false
	script: loyalty_image(card.loyalty_cost_6)
	save value: false

extra card field:
	type: text
	name: colon 1
	editable: false
	script: ":"
	save value: false
extra card field:
	type: text
	name: colon 2
	editable: false
	script: ":"
	save value: false
extra card field:
	type: text
	name: colon 3
	editable: false
	script: ":"
	save value: false
extra card field:
	type: text
	name: colon 4
	editable: false
	script: ":"
	save value: false
extra card field:
	type: text
	name: colon 5
	editable: false
	script: ":"
	save value: false
extra card field:
	type: text
	name: colon 6
	editable: false
	script: ":"
	save value: false

extra card field:
	type: choice
	name: bottom first
	editable: false
	save value: false
	choice: stripe
extra card field:
	type: choice
	name: top third
	editable: false
	save value: false
	choice: stripe
extra card field:
	type: choice
	name: bottom third
	editable: false
	save value: false
	choice: stripe
extra card field:
	type: choice
	name: top fifth
	editable: false
	save value: false
	choice: stripe
extra card field:
	type: choice
	name: bottom fifth
	editable: false
	save value: false
	choice: stripe

extra card field:
	type: color
	name: top color
	script: if is_clear() then rgb(230,230,230) else rgb(200,200,200)
	editable: false
	save value: false
extra card field:
	type: color
	name: bottom color
	script: if is_clear() then rgb(230,230,230) else rgb(200,200,200)
	editable: false
	save value: false
extra card field:
	type: color
	name: stripe color
	script: if is_clear() then rgb(230,230,230) else rgb(200,200,200)
	editable: false
	save value: false
extra card field:
	type: color
	name: stripe color 2
	script: if is_clear() then rgb(230,230,230) else rgb(200,200,200)
	editable: false
	save value: false
extra card field:
	type: color
	name: stripe color 3
	script: if is_clear() then rgb(230,230,230) else rgb(200,200,200)
	editable: false
	save value: false

extra card field:
	type: text
	name: auto copyright
	script: set.copyright
	save value: false
	editable: false
	show statistics: false
extra card field:
	type: text
	name: promo label
	save value: true
	description: The golden promo label.
extra card field:
	type: text
	name: filler text
	editable: true
	save value: true
	show statistics: false
	multi line: true
	script:
		forward_editor(field: card.special_text)
		special_text()
#extra card field:
	#type: color
	#name: opac filter
	#script: rgb(opacity(0), opacity(0), opacity(0))
	#save value: false

extra card style:
	card code:
		left: 48
		top: 976
		width: 240
		height: 20
		z index: 1
		font:
			name: Magic Gotham Medium
			size: 14
			color: white
			weight: bold
	artist arrow:
		left: { 56 + card_style.set_code.content_width }
		top: 1000
		width: 24
		height: 15
		z index: 1
		render style: image
		image: artist_arrow.png
	loyalty box:
		right: {724-4}
		top: {932-10}
		width: 124
		height: 80
		z index: 6
		render style: image
		# visible: { card.loyalty != "" }
		choice images:
			loyalty: loyalty/loyalty.png
			

	stamp:
		left: {if contains(styling.other_options, match:"use compleat frame") then 331 else 329.5}
		top: {if contains(styling.other_options, match:"use compleat frame") then 947 else 946.5}
		width: {if contains(styling.other_options, match:"use compleat frame") then 88 else 91}
		height: {if contains(styling.other_options, match:"use compleat frame") then 50 else 53.5}
		z index: 6
		visible: { is_stamped() and not is_clear() }
		render style: image
		image: { if contains(styling.other_options, match:"use compleat frame") then compleat_stamp() else card_stamp() }
		mask: { if contains(styling.other_options, match:"use compleat frame") then "" else if(not use_full_art() and chosen(choice: "colorless", card.card_color)) then "clstamp_mask.png" else if use_full_art() then "mythicstamp_mask.png" else "" }
		
	bar:
		left: 0
		top: 0
		width: 750
		height: 1050
		z index: -1
		render style: image
		image: { "fading_black.png" }
		visible: { use_full_art() }

####################################################################################		
	loyalty cost box 1:
		left: 30
		top: { abil_center(0) - 38.6 - loyal_move() }
		width: 90
		height: 72
		z index: 6
		render style: image
		visible: { card.loyalty_cost_1 != "" }
		choice images:
			loyalty up: loyalty/loyaltyup.png
			loyalty down: loyalty/loyaltydown.png
			loyalty naught: loyalty/loyaltynaught.png
	loyalty cost box 2:
		left: 30
		top: { abil_center(1) - 38.6 - loyal_move2() }
		width: 90
		height: 72
		z index: 6
		render style: image
		visible: { card.loyalty_cost_2 != "" }
		choice images:
			loyalty up: loyalty/loyaltyup.png
			loyalty down: loyalty/loyaltydown.png
			loyalty naught: loyalty/loyaltynaught.png
	loyalty cost box 3:
		left: 30
		top: { abil_center(2) - 38.6 - loyal_move3() }
		width: 90
		height: 72
		z index: 6
		render style: image
		visible: { card.loyalty_cost_3 != "" }
		choice images:
			loyalty up: loyalty/loyaltyup.png
			loyalty down: loyalty/loyaltydown.png
			loyalty naught: loyalty/loyaltynaught.png
	loyalty cost box 4:
		left: 30
		top: { abil_center(3) - 38.6 - loyal_move4() }
		width: 90
		height: 72
		z index: 6
		render style: image
		visible: { card.loyalty_cost_4 != "" }
		choice images:
			loyalty up: loyalty/loyaltyup.png
			loyalty down: loyalty/loyaltydown.png
			loyalty naught: loyalty/loyaltynaught.png
	loyalty cost box 5:
		left: 30
		top: { abil_center(4) - 38.6 - loyal_move5() }
		width: 90
		height: 72
		z index: 6
		render style: image
		visible: { card.loyalty_cost_5 != "" }
		choice images:
			loyalty up: loyalty/loyaltyup.png
			loyalty down: loyalty/loyaltydown.png
			loyalty naught: loyalty/loyaltynaught.png
	loyalty cost box 6:
		left: 30
		top: { abil_center(5) - 38.6 - loyal_move6() }
		width: 90
		height: 72
		z index: 6
		render style: image
		visible: { card.loyalty_cost_6 != "" }
		choice images:
			loyalty up: loyalty/loyaltyup.png
			loyalty down: loyalty/loyaltydown.png
			loyalty naught: loyalty/loyaltynaught.png
	
	colon 1:
		left: 118
		top: { abil_center(0) - 14.6 - loyal_move() }
		width: 10
		height: 20
		z index: 6
		font:
			name: MPlantin
			size: 30
			scale down to: 30
			color: black
		alignment: middle center
		visible: { card.loyalty_cost_1 != "" }
	colon 2:
		left: 118
		top: { abil_center(1) - 14.6 - loyal_move2() }
		width: 10
		height: 20
		z index: 6
		font:
			name: MPlantin
			size: 30
			scale down to: 30
			color: black
		alignment: middle center
		visible: { card.loyalty_cost_2 != "" }
	colon 3:
		left: 118
		top: { abil_center(2) - 14.6 - loyal_move3() }
		width: {if has_two_abilities() then 0 else 10}
		height: 20
		z index: 6
		font:
			name: MPlantin
			size: 30
			scale down to: 30
			color: black
		alignment: middle center
		visible: { card.loyalty_cost_3 != "" }
	colon 4:
		left: 118
		top: { abil_center(3) - 14.6 - loyal_move4() }
		width: { if has_four_abilities() then 10 else 0 }
		height: 20
		z index: 6
		font:
			name: MPlantin
			size: 30
			scale down to: 30
			color: black
		alignment: middle center
		visible: { card.loyalty_cost_4 != "" }
	colon 5:
		left: 118
		top: { abil_center(4) - 14.6 - loyal_move5() }
		width: { if has_four_abilities() then 10 else 0 }
		height: 20
		z index: 6
		font:
			name: MPlantin
			size: 30
			scale down to: 30
			color: black
		alignment: middle center
		visible: { card.loyalty_cost_5 != "" }
	colon 6:
		left: 118
		top: { abil_center(5) - 14.6 - loyal_move6() }
		width: { if has_four_abilities() then 10 else 0 }
		height: 20
		z index: 6
		font:
			name: MPlantin
			size: 30
			scale down to: 30
			color: black
		alignment: middle center
		visible: { card.loyalty_cost_6 != "" }


#########################################################################################################


###Curve of first textbox
	top color:
		left: {179/2}
		top: {if has_four_abilities() then 1176/2 else 1314/2}
		width: { 603 }
		height: {25/2}
		z index: -1
		mask: masks/mask_top.png
###Block of first textbox
	stripe color:
		left: { 179/2 }
		top: { if has_four_abilities() then 1201/2 else 1339/2 }
		width: { 603 }
		bottom: { max(if force_level() == "one" then 930 else to_int(stripe01()-6), (if has_four_abilities() then 622 else 690))}
		z index: -1
		mask: masks/stripe_mask.png
###Bottom of first textbox
	bottom first:
		left: { 179/2 }
		top: { max(to_int(stripe01()-6) , (if has_four_abilities() then 622 else 690) + to_number(styling.first_bottom)) }
		width: { 603 }
		height: 40
		image: { "top_stripe_test.png" }
		render style: image
		z index: -1
		mask: masks/stripe_mask.png
		visible: { force_level() != "one" }



###Top of third textbox
	top third:
		left: { 179/2 }
		top: {to_int(stripe12()-6) + to_number(styling.third_top) - 4 }
		width: { 603 }
		height: 26
		image: { "bot_stripe_test.png" }
		render style: image
		z index: -1
		mask: masks/stripe_mask.png
		visible: { card.level_3_text != ""}
###Block of third textbox
	stripe color 2:
		left: { 179/2 }
		top: { to_int(stripe12()+20) - 4 }
		width: { 603 }
		bottom: { if max_level() == 3 then 930 else to_int(min(930, stripe23()-6)) }
		z index: -1
		mask: masks/stripe_mask.png
		visible: { card.level_3_text != ""}
###Bottom of third textbox
	bottom third:
		left: { 179/2 }
		top: {to_int(min(930, stripe23()-6)) + to_number(styling.third_bottom) }
		width: { 603 }
		height: 40
		image: { "top_stripe_test.png" }
		render style: image
		z index: -1
		mask: masks/stripe_mask.png
		visible: { max_level() > 3}



###Top of fifth textbox
	top fifth:
		left: { 179/2 }
		top: {to_int(stripe34()-6) + to_number(styling.fifth_top) - 4}
		width: { 603 }
		height: 26
		image: { "bot_stripe_test.png" }
		render style: image
		z index: -1
		mask: masks/stripe_mask.png
		visible: { max_level() > 4}
###Block of fifth textbox
	stripe color 3:
		left: { 179/2 }
		top: { to_int(stripe34()+20) - 4}
		width: { 603 }
		bottom: { if max_level() == 5 then 930 else to_int(min(930, stripe45()-4)) }
		z index: -1
		mask: masks/stripe_mask.png
		visible: { max_level() > 4 and to_int(stripe34()+20) <= 930 }
###Bottom of fifth textbox
	bottom fifth:
		left: { 179/2 }
		top: {to_int(min(930, stripe45()-4)) + to_number(styling.fifth_bottom) }
		width: { 603 }
		height: 40
		image: { "top_stripe_test.png" }
		render style: image
		z index: -1
		mask: masks/stripe_mask.png
		visible: { max_level() == 6}

###Curve of bottom textbox
	bottom color:
		left: { 179/2 }
		top: { 930 }
		width: { 603 }
		height: 31
		z index: -1
		mask: {(if is_stamped() then "masks/rare_" else "masks/") + "mask_bot.png"}
		visible: { force_level() == "one" or max_level() == 3 or max_level() == 5}

##########################################################################################################################

	auto copyright:
		right: 700
		top: 998
		width: 280
		height: 20
		z index: 2
		alignment: middle right shrink-overflow
		visible: {set.automatic_copyright}
		font:
			name: mplantin
			size: 12
			color: white
			weight: bold

	promo label:
		left: 40
		top: { if has_four_abilities() then 225 else 262 }
		width: {if contains(styling.other_options, match:"prerelease stamp") then 295 else 0}
		height: 29
		alignment: middle right
		z index: 4
		font:
			name: ModMatrix
			size: 14
			color: rgb(223,169,41)
	#opac filter:
		#left: 43
		#top: {if has_four_abilities() then 290 else 325}
		#width: 305
		#height: {if has_four_abilities() then 192 else 157}
		#mask: {"opacfilter" + if has_four_abilities() then "_4.png" else ".png"}
		#z index: 1
		#visible: {styling.opacity != ""}